[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "sql2pyapi"
version = "0.1.0"
description = "Generate Python API wrappers for SQL functions"
authors = [
    { name = "Timo Harmonen", email = "timo.harmonen@iki.fi" },
]
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Database",
]
dependencies = [
    "typer[all]>=0.9.0,<1.0.0",
    "psycopg[binary,pool]>=3.1.9,<4.0.0", # For generated code
    "inflection>=0.5.1,<1.0.0", # Added for dataclass naming
]

[dependency-groups]
dev = [
    "pytest>=8.0.0", # Or pin to a specific version range if needed
    "pytest-asyncio", # Added for testing async functions
    "ruff>=0.5.5",
]

[project.urls]
"Homepage" = "https://github.com/harmti/sql2pyapi"
"Bug Tracker" = "" # Add issue tracker URL if available

[project.scripts]
sql2pyapi = "sql2pyapi.cli:app"

[tool.uv]
default-groups = ["dev"]

[tool.hatch.version]
path = "src/sql2pyapi/__init__.py" # Optional: manage version in __init__.py

[tool.hatch.build.targets.sdist]
include = ["/src", "/pyproject.toml", "/README.md"]

[tool.hatch.build.targets.wheel]
packages = ["src/sql2pyapi"]

[tool.ruff]
line-length = 120
exclude = [
    "tests/expected",
]

[tool.pytest.ini_options]
asyncio_mode = "strict"
testpaths = [
    "tests/unit",
    "tests/integration",
    "tests/system",
]
